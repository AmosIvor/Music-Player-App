<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnUser.CustomImages.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAHdElNRQfnAggQDRYlvZJ5AAAEBElEQVRYR6WXy6tWVRyGj4i3vJDi
        jUTJG830KJI4caD5D4gomtpEahChhkiBOPWCiOLAa4o0ldT+hBDPUUuxBgYFDmqQZk40tbJWz7PXbx/P
        9+29v/MdzwPvOXv/3netb1/W2nvtnm5JKU1B76Oz6CZ6iP4OuW1NbzOaEs1GDp29g75Az1A7v4faMXsO
        LY5uhg+NJ6AjyDOUp+gS2obeRuMianZc1PTMmBXbHkbjI9odNFiEfkDi2RxAb4Y9JGbRwWgrd9HCsDtD
        sBc9sBV8g+aENWxoOxddsyP4DfWGVQ8Bz7z8ce/h2LBqwR+jYrcWfG/PeSQeRP2VwPCef28KzkW5At5M
        5H392WDwE7I2I2IV8MqD8HZMiPIrKDrgxMtee+bU16HHhuAl8oeV2/IHei/iLVD3SpS343CUMxScao5Y
        B03tPae+Ivz/0FE0Myy9WehYeGaWh9UCdcfEc+RvvZqi7DjP5UCUWqA+Cn1bJFL6JMoV8HbmSLqFRkW5
        BeqHikR5m9nwCedRP0G1U436KiR9UaoF3wO9USRTWhnlFqhPRT4n/kSTLfh4lUuRqYC3N0fSrig1QubT
        HE17olQB76scSZvc8fkt28KvgFdeto1RasRMjqaDUaqA90GOpNPu+BKR+eFXwNuVI2l3lBohU16BnVGq
        gLcgR1K/O75MHL0Dz/Z28N5F0h+lWvAdA+UJrYhyBbzxyN984M5f6FF4jZApZ0GnM9udI+lmlBoh8wi9
        KA/gYdQbIbMUOYc98uNodlh6s9GJ8JxRS8JqhIxriOIAvAU+yUaH1wiZtegfJP8iH8fKbdFbE/FGyIxG
        tiluQTlv54VfAW8iciDeNzgEZnwgvRHNK+C5dpA+d87k7bQ1/Baoe+l/LBL5Sl1FHyJf22+FlqGP0Neo
        fC/cQ7W3gvr2IpHSKXe25O10MfwBqG1A3ne5jBqnagkZp9gVG4DjYX1YA1D7snB9rvDHR7GPRcPTI2N9
        NfLHva8fR7lraLMD+dJxkA+MC7ZnIH/L35xUFl18yL7Yd1T72nVUby5CrwFtfczbh6/p4u3J//1IzhYh
        YWcx8mh9ScxHp5EcichrQx++uuUU8vZ45l6VRRHJUHBFI98hB9IvqHEkdwt9OIN+jT5vI6m+Jyj6eLxT
        2JnPwhox9PV57rLAZV91SSYYC5ELR3EN13FR2g304VLsgh2CfS8Iqx4CzvvyIK6juWENG9rOQ312BPa5
        NKzOEPRKuHoVp4zrgWlhD4lZ5JiyrXhrO595OzRwmW4nzg5xyeZnl4sJZ0r7p5k1vcGfZo52v5CG92k2
        GBo7RX1OlGczmKaPU6eaK63WqTYS6Gwy2oScz/3ILyjPULlt7SRySZafcEPS0/M/gEVk1Fe7bY8AAAAA
        SUVORK5CYII=
</value>
  </data>
</root>